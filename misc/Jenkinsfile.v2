pipeline {
  agent {
    docker {
      image 'alpine:3.11'
    }
  }
  stages {
    stage('Preparation ENV flow') {
      steps {
        def commit_id
        checkout scm
        sh "git rev-parse --short HEAD > .git/commit-id"
        commit_id = readFile('.git/commit-id').trim()
      }
    }
    stage('Testing flow') {
      def myTestContainer = docker.image('alpine:3.11')
      myTestContainer.pull()
      myTestContainer.inside {
        sh 'npm install --only=dev'
        sh 'npm test'
      }
    }
    stage('Test with a DB') {
      def mysql = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes")
      def myTestContainer = docker.image('node:4.6')
      myTestContainer.pull()
      myTestContainer.inside("--link ${mysql.id}:mysql") { // using linking, mysql will be available at host: mysql, port: 3306
        sh 'npm install --only=dev'
        sh 'npm test'
      }
      mysql.stop()
    }
    stage('Docker build/push flow') {
      docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
        def app = docker.build("ydfd/docker-nodejs-example:${commit_id}", '.').push()
      }
    }
  }
}
